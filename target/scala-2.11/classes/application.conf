akka {
  loglevel = INFO
  stdout-loglevel = INFO
  event-handlers = ["akka.event.Logging$DefaultLogger"]
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }

  cluster {
    seed-nodes = ["akka.tcp://MyActorSystem@127.0.0.1:2552"]
  }

  // configure Akka persistence to use the LevelDB journal (local machine persistence)
  persistence {
    journal {
      plugin = "dynamodb-journal"
    }
    snapshot-store {
      plugin = "dynamodb-snapshot-store"
    }
  }

}

kamon.util.filters {
  "akka.tracked-actor" {
    //includes = [ "**" ]
    includes = ["**"]
    //includes = [ "**" ]
  }

  "akka.tracked-dispatcher" {
    includes = [ "**" ]
  }

  "akka.traced-actor" {
    //includes = [ "**" ]
    includes = ["**"]
  }

  "test" {
    includes = [ "**" ]
  }
}

kamon {
  trace.level = simple-trace
  metric {
    tick-interval = 1 second
  }
}

kamon.zipkin {
  host = "localhost"
  port = 9411
}

kamon {

  statsd {

    report-system-metrics = true
    # Hostname and port in which your StatsD is running. Remember that StatsD packets are sent using UDP and
    # setting unreachable hosts and/or not open ports wont be warned by the Kamon, your data wont go anywhere.
    hostname = "127.0.0.1"
    port = 8125

    # Interval between metrics data flushes to StatsD. It's value must be equal or greater than the
    # kamon.metrics.tick-interval setting.
    flush-interval = 1 second

    # Max packet size for UDP metrics data sent to StatsD.
    max-packet-size = 1024 bytes

    # Subscription patterns used to select which metrics will be pushed to StatsD. Note that first, metrics
    # collection for your desired entities must be activated under the kamon.metrics.filters settings.
    includes {
      actor       = [ "*" ]
      trace       = [ "*" ]
      dispatcher  = [ "*" ]
    }

    subscriptions {
      histogram       = [ "**" ]
      min-max-counter = [ "**" ]
      gauge           = [ "**" ]
      counter         = [ "**" ]
      trace           = [ "**" ]
      trace-segment   = [ "**" ]
      akka-actor      = [ "**" ]
      akka-dispatcher = [ "**" ]
      akka-router     = [ "**" ]
      system-metric   = [ "**" ]
      http-server     = [ "**" ]
    }

    simple-metric-key-generator {
      # Application prefix for all metrics pushed to StatsD. The default namespacing scheme for metrics follows
      # this pattern:
      #    application.host.entity.entity-name.metric-name
      application = "akka-sample"
    }
  }
}

kamon {
  system-metrics {
    # sigar is enabled by default
    host.enabled = true

    # jmx related metrics are enabled by default
    jmx.enabled = true
  }
}